<object id="AgentControl" width="0" height="0"
  classid="CLSID:D45FD31B-5C6E-11D1-9EC1-00C04FD7081F"
  codebase="#VERSION=2,0,0,0">
</object>

<object id="L&HTruVoice" width="0" height="0"
  classid="CLSID:B8F2846E-CE36-11D0-AC83-00C04FD97575"
  codebase="#VERSION=6,0,0,0">
</object>

<script language="JavaScript" type="text/javascript" type="text/javascript">
<!--//
/*
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
'_/ This Microsoft Agent Script Template was generated by
'_/ MASH 6.2 - The Microsoft Agent Scripting Helper
'_/ Copyright 1998-2003 by BellCraft Technologies (Gordon Scott Bell)
'_/ This copyright notice may not be removed without permission.
'_/ Visit the MASH Web Site at http://www.bellcraft.com/mash
'_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
*/

// * Character Objects
var Agent;

// * Variables
var UsedChars;
var AgentID;
var AgentACS;
var AgentLoaded;
var LoadReq;
var HideReq;

// * Initialize
UsedChars = "Agent";

// * Agent
AgentID = "Agent";
AgentACS = "Merlin.acs";
AgentLoaded = false;


Window_OnLoad();

function Window_OnLoad() {
    // Purpose:  Runs automatically when page is loaded

    // * INSERT ANY NON-AGENT RELATED SCRIPTING HERE

    AgentControl.Connected = true;

    AgentLoaded = LoadLocalAgent(AgentID, AgentACS);

    if (!AgentLoaded) {
        // Attempt to load default character
        AgentLoaded = LoadLocalAgent(AgentID, "");
    }

    if (AgentLoaded) {
        SetCharObj();
    }
    CheckLoadStatus();
}

function LoadLocalAgent(CharID, CharACS) {
    // Purpose:  Attempts to load the specified character
    // Returns:  true if successful, false if not

    AgentControl.RaiseRequestErrors = false;
    if (CharACS == "") {
        LoadReq = AgentControl.Characters.Load(CharID);
    }
    else {
        LoadReq = AgentControl.Characters.Load(CharID, CharACS);
    }
    AgentControl.RaiseRequestErrors = true;

    if (LoadReq.Status != 1) {
        return(true);
    }
    return(false);
}

function SetCharObj() {
    // Purpose:  Sets the character reference and TTS Language ID

    Agent = AgentControl.Characters.Character(AgentID);
    Agent.LanguageID = 0x409;
}

function CheckLoadStatus() {
    // Purpose:  Determines if required characters have been loaded.
    //           If not, issue request to load next character
    //           else run the AgentIntro routine

    if (!AgentLoaded) {
        LoadError();
        return(false);
    }

    window.status = "";
    AgentIntro();
    return(true);
}

function LoadError() {
    var strMsg;
    window.status = "";
    strMsg = "Error Loading Character: " + AgentID + "\n";
    strMsg = strMsg + "This Microsoft Agent Script requires the character(s):\n";
    strMsg = strMsg + UsedChars;
    alert(strMsg);
}
function InitAgentCommands() {
    // Purpose:  Initialize the Commands menu

    Agent.Commands.RemoveAll();
    Agent.Commands.Caption = "My Menu Name";
    Agent.Commands.Add("ACO", "Advanced Character Options", "Advanced Character Options");
}

function AgentIntro() {
    InitAgentCommands();

    // *** BEGIN MASH USER SCRIPT ***

    Agent.Show();
    Agent.Play("Alert");


    // *** END MASH USER SCRIPT ***
}
//-->
</script>

<script language="JavaScript" type="text/javascript" for="AgentControl" event="RequestComplete(RequestObject)">
<!--//
    // Purpose:  Take action on completion or failure of requests

//-->
</script>

<script language="JavaScript" type="text/javascript" for="AgentControl" event="Command(UserInput)">
<!--//
    // Purpose:  Determine Command that was selected either by menu or voice
    //           and run the applicable Command Script
    var BadConfidence;
    BadConfidence = 10;

    if (UserInput.Confidence <= -40)
    {
        // Bad Recognition
    }
    else if ((UserInput.Alt1Name != "") && (Math.abs(Math.abs(UserInput.Alt1Confidence) - Math.abs(UserInput.Confidence)) < BadConfidence))
    {
        // Bad Confidence - too close to another command
    }
    else if ((UserInput.Alt2Name != "") && (Math.abs(Math.abs(UserInput.Alt1Confidence) - Math.abs(UserInput.Confidence)) < BadConfidence))
    {
        // Bad Confidence - too close to another command
    }
    else
    {
        // High Confidence
        // *** BEGIN MASH USER COMMANDS ***
        switch(UserInput.Name) {
        case "ACO" :
            AgentControl.PropertySheet.Visible = true;
            break;
        }
        // *** END MASH USER COMMANDS ***
    }
//-->
</script>


<script language="JavaScript" type="text/javascript" for="AgentControl" event="Bookmark(BookmarkID)">
<!--//
//-->
</script>


<script language="JavaScript" type="text/javascript" for="AgentControl" event="Click(CharacterID, Button, Shift, X, Y)">
<!--
    // Insert Click Event Code Here
-->
</script>

<script language="JavaScript" type="text/javascript" for="AgentControl" event="DblClick(CharacterID, Button, Shift, X, Y)">
<!--
    // Purpose:  Stop and Hide all characters on double-click

    Agent.StopAll();
    if (!Agent.HasOtherClients) {
        if (Agent.Visible) {
            HideReq = Agent.Hide();
        }
        else {
            AgentControl.Characters.Character.Unload(AgentID);
        }
    }
//_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
//-->
</script>
